// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —ç–ø–∏–∑–æ–¥–æ–≤

const NAMES = [
  "–†–∏–∫ –°-137", "–ú–æ—Ä—Ç–∏ –°–º–∏—Ç", "–°–∞–º–º–µ—Ä", "–î–∂–µ—Ä—Ä–∏", "–ë–µ—Ç",
  "–ü—Ç–∏—á—å—è –õ–∏—á–Ω–æ—Å—Ç—å", "–ú–∏—Å—Ç–µ—Ä –ñ–æ–ø–æ—Å—Ä–∞–Ω—á–∏–∫", "–ú–∏—Å—Ç–µ—Ä –ü–æ–ø–∏–±–∞—Ç—Ç—Ö–æ–ª",
  "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", "–î–º–∏—Ç—Ä–∏–π", "–ê–Ω–Ω–∞", "–ï–ª–µ–Ω–∞", "–°–µ—Ä–≥–µ–π", "–û–ª—å–≥–∞",
  "–ú–∞–∫—Å–∏–º", "–ú–∞—Ä–∏—è", "–í–ª–∞–¥–∏–º–∏—Ä", "–ò—Ä–∏–Ω–∞", "–ê–Ω–¥—Ä–µ–π", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞",
  "–ù–∏–∫–æ–ª–∞–π", "–°–≤–µ—Ç–ª–∞–Ω–∞", "–ê–ª–µ–∫—Å–µ–π", "–ù–∞—Ç–∞–ª—å—è", "–ü–∞–≤–µ–ª", "–¢–∞—Ç—å—è–Ω–∞",
  "–ò–≤–∞–Ω", "–Æ–ª–∏—è", "–†–æ–º–∞–Ω", "–í–∏–∫—Ç–æ—Ä–∏—è", "–î–µ–Ω–∏—Å", "–ê–Ω–∞—Å—Ç–∞—Å–∏—è"
];

const COMMENT_TEMPLATES: Record<number, string[]> = {
  1: [
    "–ü–∏–ª–æ—Ç –ø—Ä–æ—Å—Ç–æ –±–æ–º–±–∞!", "–û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ —Å–µ—Ä–∏–∞–ª–∞",
    "–ú–æ—Ä—Ç–∏ –≤ —ç—Ç–æ–π —Å–µ—Ä–∏–∏ –ø—Ä–æ—Å—Ç–æ —à–µ–¥–µ–≤—Ä", "–ö–ª–∞—Å—Å–∏–∫–∞!",
    "–Æ–º–æ—Ä –Ω–∞ –≤—ã—Å–æ—Ç–µ", "–ü–æ—Ä—Ç–∞–ª-–ø—É—à–∫–∞ - –ª—É—á—à–µ–µ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –†–∏–∫–∞!",
    "–ë—Ä–∞–≤–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è–º!", "–ì–µ–Ω–∏–∞–ª—å–Ω—ã–π —ç–ø–∏–∑–æ–¥!",
    "–õ—É—á—à–µ–µ –Ω–∞—á–∞–ª–æ —Å–µ–∑–æ–Ω–∞!", "–ü–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞—é –∫–∞–∂–¥—ã–π –≥–æ–¥",
    "–†–∏–∫ –∏ –ú–æ—Ä—Ç–∏ –Ω–∞–≤—Å–µ–≥–¥–∞!", "–û–±–æ–∂–∞—é —ç—Ç–æ—Ç —Å–µ—Ä–∏–∞–ª",
    "–®–µ–¥–µ–≤—Ä!", "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è —Å–µ—Ä–∏—è", "–°–º–µ—è–ª—Å—è –≤—Å—é —Å–µ—Ä–∏—é"
  ],
  2: [
    "–í—Ç–æ—Ä–æ–π —Å–µ–∑–æ–Ω –Ω–µ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–ª!", "–°—é–∂–µ—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ",
    "–†–∏–∫ —Å–Ω–æ–≤–∞ –≤—Å–µ—Ö –ø–µ—Ä–µ–∏–≥—Ä–∞–ª", "–õ—É—á—à–∏–π —ç–ø–∏–∑–æ–¥ —Å–µ–∑–æ–Ω–∞!",
    "–ì–µ–Ω–∏–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π", "–ú–æ—Ä—Ç–∏ –ø–æ–≤–∑—Ä–æ—Å–ª–µ–ª",
    "–û–±–æ–∂–∞—é –º–µ–∂–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "–°–º–µ—è–ª—Å—è –≤—Å—é —Å–µ—Ä–∏—é",
    "–¢–∞–∫–æ–≥–æ –ø–æ–≤–æ—Ä–æ—Ç–∞ –Ω–µ –æ–∂–∏–¥–∞–ª!", "–ö–∞—á–µ—Å—Ç–≤–æ –Ω–µ –ø–∞–¥–∞–µ—Ç",
    "–í—Ç–æ—Ä–æ–π —Å–µ–∑–æ–Ω –¥–∞–∂–µ –ª—É—á—à–µ –ø–µ—Ä–≤–æ–≥–æ", "–†–∏–∫ –≥–µ–Ω–∏–π!",
    "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "–ö–∞–∂–¥–∞—è —Å–µ—Ä–∏—è –ª—É—á—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π"
  ],
  3: [
    "–¢—Ä–µ—Ç–∏–π —Å–µ–∑–æ–Ω –ø—Ä–æ—Å—Ç–æ –∫–æ—Å–º–æ—Å!", "–§–∏–ª–æ—Å–æ—Ñ–∏—è —Å–µ—Ä–∏–∞–ª–∞ –ø–æ—Ä–∞–∂–∞–µ—Ç",
    "–†–∏–∫ –°-137 –ª—É—á—à–∏–π –†–∏–∫!", "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–µ—Ä–∏—è",
    "–ì–ª—É–±–æ–∫–∏–π —Å–º—ã—Å–ª", "–ü–ª–∞–∫–∞–ª –∏ —Å–º–µ—è–ª—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ",
    "–®–µ–¥–µ–≤—Ä –∞–Ω–∏–º–∞—Ü–∏–∏!", "–ü–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞—é –∏ –Ω–∞—Ö–æ–∂—É –Ω–æ–≤—ã–µ –¥–µ—Ç–∞–ª–∏",
    "–ë—Ä–∞–≤–æ —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç–∞–º!", "–õ—É—á—à–µ —Å –∫–∞–∂–¥—ã–º —Å–µ–∑–æ–Ω–æ–º",
    "–¢—Ä–µ—Ç–∏–π —Å–µ–∑–æ–Ω —Å–∞–º—ã–π –ª—É—á—à–∏–π", "–†–∏–∫ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ",
    "–ú–æ—Ä—Ç–∏ –ø–æ–≤–∑—Ä–æ—Å–ª–µ–ª", "–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π —Å–µ—Ä–∏–∞–ª"
  ],
  4: [
    "–°–µ–∑–æ–Ω –Ω–µ –ø–æ–¥–∫–∞—á–∞–ª", "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞—à–∫–∞–ª–∏–≤–∞–µ—Ç",
    "–†–∏–∫ –∏ –ú–æ—Ä—Ç–∏ —Ñ–æ—Ä–µ–≤–µ—Ä!", "–ö–∞–∂–¥–∞—è —Å–µ—Ä–∏—è - —à–µ–¥–µ–≤—Ä",
    "–°–µ—Ä–∏–∞–ª –≤–µ–∫–∞!", "–Æ–º–æ—Ä —Å—Ç–∞–ª –µ—â—ë –ª—É—á—à–µ",
    "–û–±–æ–∂–∞—é —ç—Ç–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π", "–°–µ—Ä–∏–∞–ª –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –¥—É–º–∞—Ç—å",
    "–ò–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å —é–º–æ—Ä–∞ –∏ –¥—Ä–∞–º—ã", "–ì–µ–Ω–∏–∞–ª—å–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π",
    "–õ—É—á—à–∏–π —Å–µ–∑–æ–Ω", "–ù–µ –º–æ–≥—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è —Å–º–æ—Ç—Ä–µ—Ç—å",
    "–ö–∞–∂–¥—ã–π —ç–ø–∏–∑–æ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ", "–§–∏–ª–æ—Å–æ—Ñ–∏—è –≥–ª—É–±–æ–∫–∞—è"
  ]
};

const generateAvatar = (name: string): string => {
  const seed = encodeURIComponent(name);
  return `https://api.dicebear.com/7.x/fun-emoji/svg?seed=${seed}&backgroundColor=06b6d4,10b981,8b5cf6,ec4899&radius=50`;
};

const randomChoice = <T,>(arr: T[]): T => arr[Math.floor(Math.random() * arr.length)];

const randomRating = (): number => {
  const rand = Math.random();
  if (rand < 0.6) return 5;
  if (rand < 0.9) return 4;
  return 3;
};

export const generateCommentsForEpisode = async (episodeId: number, season: number, count: number = 50): Promise<void> => {
  const API_URL = 'https://functions.poehali.dev/ac29f682-6173-43c7-a16b-3ffb94e0f51a';
  const templates = COMMENT_TEMPLATES[season] || COMMENT_TEMPLATES[1];
  
  console.log(`–ì–µ–Ω–µ—Ä–∏—Ä—É—é ${count} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è —ç–ø–∏–∑–æ–¥–∞ ${episodeId} (—Å–µ–∑–æ–Ω ${season})...`);
  
  for (let i = 0; i < count; i++) {
    const name = randomChoice(NAMES);
    const text = randomChoice(templates);
    const rating = randomRating();
    const avatar = generateAvatar(name);
    
    try {
      await fetch(API_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          action: 'add_comment',
          episodeId,
          authorName: name,
          authorAvatar: avatar,
          text,
          rating
        })
      });
      
      if ((i + 1) % 10 === 0) {
        console.log(`  –°–æ–∑–¥–∞–Ω–æ ${i + 1} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...`);
      }
      
      // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä
      await new Promise(resolve => setTimeout(resolve, 100));
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è ${i + 1}:`, error);
    }
  }
  
  console.log(`‚úÖ –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω–æ ${count} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è —ç–ø–∏–∑–æ–¥–∞ ${episodeId}`);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —ç–ø–∏–∑–æ–¥–æ–≤
export const fillAllEpisodesWithComments = async (): Promise<void> => {
  const EPISODES_API = 'https://functions.poehali.dev/031f0f01-3e0b-440b-a295-08f07c4d1389';
  
  console.log('–ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ —ç–ø–∏–∑–æ–¥–æ–≤...');
  const response = await fetch(EPISODES_API);
  const episodes = await response.json();
  
  console.log(`–ù–∞–π–¥–µ–Ω–æ ${episodes.length} —ç–ø–∏–∑–æ–¥–æ–≤`);
  
  for (const episode of episodes) {
    const commentsCount = Math.floor(Math.random() * (100 - 30 + 1)) + 30; // 30-100
    await generateCommentsForEpisode(episode.id, episode.season, commentsCount);
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —ç–ø–∏–∑–æ–¥–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 1000));
  }
  
  console.log('üéâ –í—Å–µ —ç–ø–∏–∑–æ–¥—ã –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏!');
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ window –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
if (typeof window !== 'undefined') {
  (window as any).generateComments = generateCommentsForEpisode;
  (window as any).fillAllComments = fillAllEpisodesWithComments;
}
